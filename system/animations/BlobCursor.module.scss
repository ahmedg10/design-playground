$blob-gradient: linear-gradient(90deg, #003f5b, #2b4b7d, #5f5195, #98509d, #cc4c91, #f25375, #ff6f4e, #ff9913);

// Main cursor styles
.cursor {
  position: fixed;
  width: 120px;
  height: 120px;
  border-radius: 50%;
  background: $blob-gradient;
  background-size: 800% 800%;
  left: var(--mouse-x, 50%);
  top: var(--mouse-y, 50%);
  transform: translate(-50%, -50%);
  pointer-events: none; // Allows interaction with elements underneath
  z-index: -1; // Places the cursor behind other elements
  animation: 
    blobWiggle 3s ease-in-out infinite,
    gradientShift 20s ease infinite;
  filter: blur(var(--cursor-blur, 15px));
  opacity: var(--cursor-opacity, 1);
  transition: opacity 0.3s ease, filter 0.3s ease;

  // Inner blob elements
  &::after,
  &::before {
    content: '';
    position: absolute;
    background: $blob-gradient;
    background-size: 800% 800%;
    border-radius: 50%;
    animation: gradientShift 20s ease infinite;
    filter: blur(3px);
  }

  &::after {
    width: 30px;
    height: 30px;
    transform-origin: 50px 50px;
    animation: rotate 3.5s ease-in-out infinite, gradientShift 20s ease infinite;
  }

  &::before {
    width: 40px;
    height: 40px;
    transform-origin: 30px 30px;
    animation: rotate 3.5s ease-in-out 2s infinite, gradientShift 20s ease infinite;
  }
}


// Generate multiple drop elements
@for $i from 1 through 6 {
  .drop-#{$i} {
    position: absolute;
    top: 38px;
    left: 38px;
    width: (10 + $i) + px;
    height: (10 + $i) + px;
    transform: rotate(random(300) + deg);
    
    &:after {
      position: absolute;
      display: block;
      content: '';
      width: 100%;
      height: 100%;
      background: $blob-gradient;
      background-size: 800% 800%;
      border-radius: 50%;
      transform-origin: (80 - $i * 2) + px (80 - $i * 2) + px;
      animation: 
        rotate (3.5 + $i / 5) + s ease-in-out ($i / 5) + s infinite,
        gradientShift 20s ease infinite,
        meshWithCursor 3s ease-in-out infinite;
      filter: blur(var(--drop-blur, 5px));
      opacity: var(--drop-opacity, 1);
      transition: opacity 0.3s ease, filter 0.3s ease;
    }
  }
}

// Animation for the main blob wiggle effect
@keyframes blobWiggle {
  0%, 100% { 
    border-radius: 50%; 
    transform: translate(-50%, -50%) scale(1);
  }
  25%, 75% { 
    border-radius: 60% 40% 60% 40%; 
    transform: translate(-50%, -50%) scale(1.05);
  }
  50% { 
    border-radius: 40% 60% 40% 60%; 
    transform: translate(-50%, -50%) scale(0.95);
  }
}

// Animation for the gradient color shift
@keyframes gradientShift {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

// Animation for rotating elements
@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

// Animation for meshing effect with the cursor
@keyframes meshWithCursor {
  0%, 100% {
    opacity: 1;
    transform: scale(1) translate(0, 0);
  }
  50% {
    opacity: 0;
    transform: scale(0.5) translate(30px, 30px);
  }
}
